name: Build LibVips for Windows Release - all

on: workflow_dispatch

permissions: {}

jobs:
  build:
    runs-on: ubuntu-latest # Using a Linux runner as build-win66-mxe cross-compiles

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache MXE build directory
      - name: Cache MXE
        uses: actions/cache@v4
        with:
          path: /usr/local/mxe
          key: mxe-${{ runner.os }}-${{ hashFiles('mxe/**') }}
          restore-keys: |
            mxe-${{ runner.os }}-

      # Cache Meson build directory
      - name: Cache Meson build
        uses: actions/cache@v4
        with:
          path: build/
          key: meson-build-${{ runner.os }}-${{ hashFiles('**/meson.build') }}
          restore-keys: |
            meson-build-${{ runner.os }}-

      - name: Build LibVips (all --with-hevc)
        run: |
          # ./build.sh vips-all x86_64-w64-mingw32.shared --with-hevc
          ./build.sh vips-all --target x86_64-w64-mingw32.shared --with-hevc

      - name: Upload all zips
        uses: actions/upload-artifact@v4
        with:
          name: vips-zips
          path: packaging/*.zip
    

      - name: Find generated artifacts
        id: find_artifacts
        run: |
          ZIP_FILES=$(find packaging -name "*.zip")
          echo "Found artifact: $ZIP_FILES"
          echo "ARTIFACT_PATH=$ZIP_FILES" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v8.17.0
          release_name: Release v8.17.0
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload all zips to release
        uses: softprops/action-gh-release@v2
        with:
          files: packaging/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
